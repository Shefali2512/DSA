#include <stdlib.h>

int findFirst(int* nums, int numsSize, int target) {
    int left = 0, right = numsSize - 1, first = -1;
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (nums[mid] >= target)
            right = mid - 1;
        else
            left = mid + 1;
        if (nums[mid] == target)
            first = mid;
    }
    return first;
}

int findLast(int* nums, int numsSize, int target) {
    int left = 0, right = numsSize - 1, last = -1;
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (nums[mid] <= target)
            left = mid + 1;
        else
            right = mid - 1;
        if (nums[mid] == target)
            last = mid;
    }
    return last;
}

int* searchRange(int* nums, int numsSize, int target, int* returnSize) {
    *returnSize = 2; // The output should always have two elements
    int* result = (int*)malloc(2 * sizeof(int));
    result[0] = findFirst(nums, numsSize, target);
    result[1] = findLast(nums, numsSize, target);
    return result;
}

